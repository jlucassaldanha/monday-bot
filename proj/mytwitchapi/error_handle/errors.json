{
    "start-commercial": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully started the commercial.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The length query parameter is required.\n- The ID in broadcaster_id is not valid.\nTo start a commercial, the broadcaster must be streaming live.\nThe broadcaster may not run another commercial until the cooldown period expires. The \n- retry_after field in the previous start commercial response specifies the amount of time the broadcaster must wait between running commercials.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in broadcaster_id must match the user ID found in the request’s OAuth token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the channel:edit:commercial scope.\nThe OAuth token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the OAuth token.\n"
            ],
            "404": [
                "404 Not Found",
                "- The ID in broadcaster_id was not found.\n"
            ],
            "429": [
                "429 Too Many Requests",
                "The broadcaster may not run another commercial until the cooldown period expires. The \n- retry_after field in the previous start commercial response specifies the amount of time the broadcaster must wait between running commercials.\n"
            ]
        }
    },
    "get-ad-schedule": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Returns the ad schedule information for the channel.\n"
            ],
            "400": [
                "400 Bad Request",
                "The broadcaster ID is not valid.\n"
            ],
            "500": [
                "500 Internal Server Error",
                "-  "
            ]
        }
    },
    "snooze-next-ad": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "User’s next ad is successfully snoozed. Their \n- snooze_count is decremented and snooze_refresh_time and next_ad_at are both updated.\n"
            ],
            "400": [
                "400 Bad Request",
                "The channel is not currently live.\nThe broadcaster ID is not valid.\nChannel does not have an upcoming scheduled ad break.\n"
            ],
            "429": [
                "429 Too Many Requests",
                "Channel has no snoozes left.\n"
            ],
            "500": [
                "500 Internal Server Error",
                "-  "
            ]
        }
    },
    "get-extension-analytics": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the broadcaster's analytics reports.\n"
            ],
            "400": [
                "400 Bad Request",
                "The start and end dates are optional but if you specify one, you must specify the other.\nThe end date must be equal to or later than the start date.\n- The cursor specified in the after query parameter is not valid.\n- The resource supports only forward pagination (use the after query parameter).\n- The first query parameter is outside the allowed range of values.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain a user access token.\n- The user access token must include the analytics:read:extensions scope.\nThe OAuth token is not valid.\nThe Client-Id header is required.\nThe client ID specified in the Client-Id header does not match the client ID specified in the OAuth token.\n"
            ],
            "404": [
                "404 Not Found",
                "- The extension specified in the extension_id query parameter was not found.\n"
            ]
        }
    },
    "get-game-analytics": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the broadcaster’s analytics reports.\n"
            ],
            "400": [
                "400 Bad Request",
                "The start and end dates are optional but if you specify one, you must specify the other.\nThe end date must be equal to or later than the start date.\n- The cursor specified in the after query parameter is not valid.\n- The resource supports only forward pagination (use the after query parameter).\n- The first query parameter is outside the allowed range of values.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain a user access token.\n- The user access token must include the analytics:read:games scope.\nThe OAuth token is not valid.\nThe Client-Id header is required.\nThe client ID specified in the Client-Id header does not match the client ID specified in the OAuth token.\n"
            ],
            "404": [
                "404 Not Found",
                "- The game specified in the game_id query parameter was not found.\n"
            ]
        }
    },
    "get-bits-leaderboard": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the broadcaster’s Bits leaderboard.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The time period specified in the period query parameter is not valid.\n- The started_at query parameter is required if period is not set to all.\n- The value in the count query parameter is outside the range of allowed values.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify a user access token.\n- The user access token must include the the bits:read scope.\nThe access token is not valid.\nThe ID in the Client-Id header must match the client ID in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "-  "
            ]
        }
    },
    "get-cheermotes": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the Cheermotes.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify an app access token or user access token.\nThe ID in the Client-Id header must match the Client ID in the OAuth token.\n"
            ]
        }
    },
    "get-extension-transactions": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of transactions.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The extension_id query parameter is required.\n- The request specified too many id query parameters.\nThe pagination cursor is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify an app access token.\nThe access token is not valid.\n- The ID in the extension_id query parameter must match the client ID in the access token.\nThe ID in the Client-Id header must match the client ID in the access token.\n"
            ],
            "404": [
                "404 Not Found",
                "- One or more of the transaction IDs specified using the id query parameter were not found.\n"
            ]
        }
    },
    "get-channel-information": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of channels.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\nThe broadcaster ID is not valid.\n- The number of broadcaster_id query parameters exceeds the maximum allowed.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify an app access token or user access token.\nThe OAuth token is not valid.\nThe ID in the Client-Id header must match the Client ID in the OAuth token.\n"
            ],
            "429": [
                "429 Too Many Requests",
                "The application exceeded the number of calls it may make per minute. For details, see \n- Rate Limits.\n"
            ],
            "500": [
                "500 Internal Server Error",
                "-  "
            ]
        }
    },
    "modify-channel-information": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully updated the channel’s properties.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\nThe request must update at least one property.\n- The title field may not contain an empty string.\n- The ID in game_id is not valid.\n- To update the delay field, the broadcaster must have partner status.\n- The list in the tags field exceeds the maximum number of tags allowed.\n- A tag in the tags field exceeds the maximum length allowed.\n- A tag in the tags field is empty.\n- A tag in the tags field contains special characters or spaces.\n- One or more tags in the tags field failed AutoMod review.\n- Game restricted for user's age and region"
            ],
            "401": [
                "401 Unauthorized",
                "- User requests CCL for a channel they don’t ownThe ID in broadcaster_id must match the user ID found in the OAuth token.\nThe Authorization header is required and must specify a user access token.\n- The OAuth token must include the channel:manage:broadcast scope.\nThe OAuth token is not valid.\nThe ID in the Client-Id header must match the Client ID in the OAuth token.\n"
            ],
            "403": [
                "403 Forbidden",
                "- User requested gaming CCLs to be added to their channelUnallowed CCLs declared for underaged authorized user in a restricted country"
            ],
            "409": [
                "409 Too Many Requests",
                "- User set the Branded Content flag too frequently"
            ],
            "500": [
                "500 Internal server error",
                "-  "
            ]
        }
    },
    "get-channel-editors": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the broadcaster's list of editors.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in the broadcaster_id query parameter must match the user ID found in the OAuth token.\nThe Authorization header is required and must specify a user access token.\n- The OAuth token must include the channel:read:editors scope.\nThe OAuth token is not valid.\nThe ID in the Client-Id header must match the Client ID in the OAuth token.\n"
            ]
        }
    },
    "get-followed-channels": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the broadcaster's list of followers.\n"
            ],
            "400": [
                "400 Bad Request",
                "- Possible reasons:The user_id query parameter is required.\n- The broadcaster_id query parameter is not valid.\n- The user_id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- Possible reasons:The ID in the user_id query parameter must match the user ID in the access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token is missing the user:read:follows scope.\nThe OAuth token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the OAuth token.\n"
            ]
        }
    },
    "get-channel-followers": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the broadcaster’s list of followers.\n"
            ],
            "400": [
                "400 Bad Request",
                "- Possible reasons:The broadcaster_id query parameter is required.\n- The broadcaster_id query parameter is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- Possible reasons:The ID in the broadcaster_id query parameter must match the user ID in the access token or the user must be a moderator for the specified broadcaster.\nThe Authorization header is required and must contain a user access token.\n- The user access token is missing the moderator:read:followers scope.\nThe OAuth token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the OAuth token.\n- The user_id parameter was specified but either the user access token is missing the moderator:read:followers scope or the user is not the broadcaster or moderator for the specified channel"
            ]
        }
    },
    "create-custom-rewards": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully created the custom reward.\n"
            ],
            "400": [
                "400 Bad Request",
                "The request exceeds the maximum number of rewards allowed per channel.\n- The broadcaster_id query parameter is required.\n- The title field is required.\n- The title must contain a minimum of 1 character and a maximum of 45 characters.\n- The title must be unique amongst all of the broadcaster's custom rewards.\n- The cost field is required.\n- The cost field must contain a minimum of 1 point.\n- The prompt field is limited to a maximum of 200 characters.\n- If is_max_per_stream_enabled is true, the minimum value for max_per_stream is 1.\n- If is_max_per_user_per_stream_enabled is true, the minimum value for max_per_user_per_stream is 1.\n- If is_global_cooldown_enabled is true, the minimum value for global_cooldown_seconds is 1.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify a user access token.\n- The user access token is missing the channel:manage:redemptions scope.\nThe OAuth token is not valid.\nThe ID in the Client-Id header must match the Client ID in the OAuth token.\n"
            ],
            "403": [
                "403 Forbidden",
                "The broadcaster is not a partner or affiliate.\n"
            ],
            "500": [
                "500 Internal Server Error",
                "-  "
            ]
        }
    },
    "delete-custom-reward": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully deleted the custom reward.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify a user access token.\n- The user access token must include the channel:manage:redemptions scope.\nThe OAuth token is not valid.\nThe ID in the Client-Id header must match the Client ID in the OAuth token.\n"
            ],
            "403": [
                "403 Forbidden",
                "The ID in the Client-Id header must match the client ID used to create the custom reward.\nThe broadcaster is not a partner or affiliate.\n"
            ],
            "404": [
                "404 Not Found",
                "- The custom reward specified in the id query parameter was not found.\n"
            ],
            "500": [
                "500 Internal Server Error",
                "-  "
            ]
        }
    },
    "get-custom-reward": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the broadcaster’s list of custom rewards.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The request exceeds the maximum number of id query parameters that you may specify.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header must specify a user access token.\n- The user access token must include the channel:read:redemptions scope.\nThe OAuth token is not valid.\nThe ID in the Client-Id header must match the Client ID in the OAuth token.\n"
            ],
            "403": [
                "403 Forbidden",
                "The broadcaster is not a partner or affiliate.\n"
            ],
            "404": [
                "404 Not Found",
                "- All of the custom rewards specified using the id query parameter were not found.\n"
            ],
            "500": [
                "500 Internal Server Error",
                "-  "
            ]
        }
    },
    "get-custom-reward-redemption": {
        "errors": {
            "200": [
                "200 Ok",
                "Successfully retrieved the list of redeemed custom rewards.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The reward_id query parameter is required.\n- The status query parameter is required if you didn't specify the id query parameter.\n- The value in the status query parameter is not valid.\n- The value in the sort query parameter is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify a user access token.\n- The user access token must include the channel:read:redemptions scope.\nThe OAuth token is not valid.\nThe ID in the Client-Id header must match the Client ID in the OAuth token.\n"
            ],
            "403": [
                "403 Forbidden",
                "The ID in the Client-Id header must match the client ID used to create the custom reward.\nThe broadcaster is not a partner or affiliate.\n"
            ],
            "404": [
                "404 Not Found",
                "- All of the redemptions specified using the id query parameter were not found.\n"
            ],
            "500": [
                "500 Internal Server Error",
                "-  "
            ]
        }
    },
    "update-custom-reward": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully updated the custom reward.\n"
            ],
            "400": [
                "400 Bad Request",
                "- ul>The broadcaster_id query parameter is required.\n- The id query parameter is required.\n- The title must contain a minimum of 1 character and a maximum of 45 characters.\n- The title must be unique amongst all of the broadcaster's custom rewards.\n- The cost field must contain a minimum of 1 point.\n- The prompt field is limited to a maximum of 200 characters.\n- If is_max_per_stream_enabled is true, the minimum value for max_per_stream is 1.\n- If is_max_per_user_per_stream_enabled is true, the minimum value for max_per_user_per_stream is 1.\n- If is_global_cooldown_enabled is true, the minimum value for global_cooldown_seconds is 1 and the maximum is 604800.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify a user access token.\n- The user access token must include the channel:manage:redemptions scope.\nThe OAuth token is not valide.\nThe ID in the Client-Id header must match the Client ID in the OAuth token.\n"
            ],
            "403": [
                "403 Forbidden",
                "The ID in the Client-Id header must match the client ID used to create the custom reward.\nThe broadcaster is not a partner or affiliate.\n"
            ],
            "404": [
                "404 Not Found",
                "- The custom reward specified in the id query parameter was not found.\n"
            ],
            "500": [
                "500 Internal Server Error",
                "-  "
            ]
        }
    },
    "update-redemption-status": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully updated the redemption’s status.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The reward_id query parameter is required.\n- The id query parameter is required.\n- The value in the status query parameter is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify a user access token.\n- The user access token must include the channel:manage:redemptions scope.\nThe OAuth token is not valid.\nThe ID in the Client-Id header must match the Client ID in the OAuth token.\n"
            ],
            "403": [
                "403 Forbidden",
                "The ID in the Client-Id header must match the client ID used to create the custom reward.\nThe broadcaster is not a partner or affiliate.\n"
            ],
            "404": [
                "404 Not Found",
                "- The custom reward specified in the reward_id query parameter was not found.\n- The redemptions specified using the id query parameter were not found or their statuses weren't marked as UNFULFILLED.\n"
            ],
            "500": [
                "500 Internal Server Error",
                "-  "
            ]
        }
    },
    "get-charity-campaign": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved information about the broadcaster’s active charity campaign.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The broadcaster_id query parameter is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in the broadcaster_id query parameter must match the user ID in the access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the channel:read:charity scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header must match the client ID specified in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "The broadcaster is not a partner or affiliate.\n"
            ]
        }
    },
    "get-charity-campaign-donations": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of donations that users contributed to the broadcaster’s charity campaign.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The broadcaster_id query parameter is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in the broadcaster_id query parameter must match the user ID in the access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the channel:read:charity scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header must match the client ID specified in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "The broadcaster is not a partner or affiliate.\n"
            ]
        }
    },
    "get-chatters": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the broadcaster’s list of chatters.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The ID in the broadcaster_id query parameter is not valid.\n- The moderator_id query parameter is required.\n- The ID in the moderator_id query parameter is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in the moderator_id query parameter must match the user ID in the access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the moderator:read:chatters scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "- The user in the moderator_id query parameter is not one of the broadcaster's moderators.\n"
            ]
        }
    },
    "get-channel-emotes": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved broadcaster's list of custom emotes.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify a valid app access token or user access token.\nThe OAuth token is not valid.\nThe ID in the Client-Id header must match the Client ID in the OAuth token.\n"
            ]
        }
    },
    "get-global-emotes": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved Twitch's list of global emotes.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify a valid app access token or user access token.\nThe OAuth token is not valid.\nThe ID in the Client-Id header must match the Client ID in the OAuth token.\n"
            ]
        }
    },
    "get-emote-sets": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the emotes for the specified emote sets.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The emote_set_id query parameter is required.\n- The number of emote_set_id query parameters exceeds the maximum allowed.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify a valid app access token or user access token.\nThe OAuth token is not valid.\nThe ID in the Client-Id header must match the Client ID in the OAuth token.\n"
            ]
        }
    },
    "get-channel-chat-badges": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the broadcaster’s custom chat badges.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify a valid app access token or user access token.\nThe OAuth token is not valid.\nThe ID in the Client-Id header must match the Client ID in the OAuth token.\n"
            ]
        }
    },
    "get-global-chat-badges": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of global chat badges.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify a valid app access token or user access token.\nThe OAuth token is not valid.\nThe ID in the Client-Id header must match the Client ID in the OAuth token.\n"
            ]
        }
    },
    "get-chat-settings": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the broadcaster’s chat settings.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify a valid app access token or user access token.\nThe OAuth token is not valid.\nThe ID in the Client-Id header must match the Client ID in the OAuth token.\n"
            ]
        }
    },
    "get-shared-chat-session": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the shared chat session. Returns an empty array if the broadcaster_id in the request isn’t in a shared chat session.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The ID in the broadcaster_id query parameter is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The OAuth token is not valid.\nThe Authorization header is required and must contain a user access token.\n"
            ],
            "500": [
                "500 Internal Error",
                "Internal Server Error.\n"
            ]
        }
    },
    "get-user-emotes": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the emotes.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The user_id query parameter is required.\n- The ID in the user_id query parameter is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in user_id must match the user ID in the user access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the user:read:emotes scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ]
        }
    },
    "update-chat-settings": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully updated the broadcaster’s chat settings.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The moderator_id query parameter is required.\n- If slow_mode is true, the slow_mode_wait_time field must be set to a valid value.\n- If follower_mode is true, the follower_mode_duration field must be set to a valid value.\n- If non_moderator_chat_delay is true, the non_moderator_chat_delay_duration field must be set to a valid value.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in the moderator_id query parameter must match the user ID in the user access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the moderator:manage:chat_settings scope.\nThe access token is not valid.\nThe ID in the Client-Id header must match the client ID in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "- The user in the moderator_id query parameter must have moderator privileges in the broadcaster's channel.\n"
            ]
        }
    },
    "send-chat-announcement": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully sent the announcement.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The message field in the request's body is required.\n- The message field may not contain an empty string.\n- The string in the message field failed review.\nThe specified color is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain a user access token.\n- The user access token is missing the moderator:manage:announcements scope.\nThe OAuth token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the OAuth token.\n"
            ],
            "429": [
                "429 Too Many Requests",
                "- The sender has exceeded the number of announcements they may send to this broadcaster_id within a given window.\n"
            ]
        }
    },
    "send-a-shoutout": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully sent the specified broadcaster a Shoutout.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The from_broadcaster_id query parameter is required.\n- The ID in the from_broadcaster_id query parameter is not valid.\n- The to_broadcaster_id query parameter is required.\n- The ID in the to_broadcaster_id query parameter is not valid.\nThe broadcaster may not give themselves a Shoutout.\nThe broadcaster is not streaming live or does not have one or more viewers.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in moderator_id must match the user ID in the user access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the moderator:manage:shoutouts scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "- The user in moderator_id is not one of the broadcaster's moderators.\nThe broadcaster may not send the specified broadcaster a Shoutout.\n"
            ],
            "429": [
                "429 Too Many Requests",
                "The broadcaster exceeded the number of Shoutouts they may send within a given window. See the endpoint's Rate Limits.\nThe broadcaster exceeded the number of Shoutouts they may send the same broadcaster within a given window. See the endpoint's Rate Limits.\n"
            ]
        }
    },
    "send-chat-message": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully sent the specified broadcaster a message.\n"
            ],
            "400": [
                "400 Bad Request",
                "-  The broadcaster_id query parameter is required.\n-  The ID in the broadcaster_id query parameter is not valid.\n-  The sender_id query parameter is required.\n-  The ID in the sender_id query parameter is not valid.\n-  The text query parameter is required.\n-  The ID in the reply_parent_message_id query parameter is not valid.\n-  Cannot set *for_source_only* if User Access Token is used.\n"
            ],
            "401": [
                "401 Unauthenticated",
                "-  The ID in the user_id query parameter must match the user ID in the access token.\n-  The Authorization header is required and must contain a user access token.\n-  The user access token must include the user:write:chat scope.\n-  The access token is not valid.\n-  The client ID specified in the Client-Id header does not match the client ID specified in the access token.\n-  "
            ],
            "403": [
                "403 Forbidden",
                "The sender is not permitted to send chat messages to the broadcaster’s chat room.\n"
            ],
            "422": [
                "422 Unprocessable Entity",
                "The message is too large.\n"
            ]
        }
    },
    "get-user-chat-color": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the chat color used by the specified users.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The ID in the user_id query parameter is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain an app access token or user access token.\nThe OAuth token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the OAuth token.\n"
            ]
        }
    },
    "update-user-chat-color": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully updated the user's chat color.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The ID in the user_id query parameter is not valid.\n- The color query parameter is required.\n- The named color in the color query parameter is not valid.\nTo specify a Hex color code, the user must be a Turbo or Prime user.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain a user access token.\n- The user access token must include the user:manage:chat_color scope.\nThe OAuth token is not valid.\n- The ID in the user_id query parameter must match the user ID in the access token.\nThe client ID specified in the Client-Id header does not match the client ID specified in the OAuth token.\n"
            ]
        }
    },
    "create-clip": {
        "errors": {
            "OK CODE": "202",
            "202": [
                "202 Accepted",
                "Successfully started the clip process.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The ID in the broadcaster_id query parameter was not found.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify user access token.\n- The user access token must include the clips:edit scope.\nThe OAuth token is not valid.\nThe ID in the Client-Id header must match the Client ID in the OAuth token.\n"
            ],
            "403": [
                "403 Forbidden",
                "The broadcaster has restricted the ability to capture clips to followers and/or subscribers only.\nThe specified broadcaster has not enabled clips on their channel.\n"
            ],
            "404": [
                "404 Not Found",
                "- The broadcaster in the broadcaster_id query parameter must be broadcasting live.\n"
            ]
        }
    },
    "get-clips": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of video clips.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The id or game_id or broadcaster_id query parameter is required.\n- The id, game_id, and broadcaster_id query parameters are mutually exclusive; you may specify only one of them.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain an app access token or user access token.\nThe OAuth token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the OAuth token.\n"
            ],
            "404": [
                "404 Not Found",
                "- The ID in game_id was not found.\n"
            ]
        }
    },
    "get-conduits": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved conduits.\n"
            ],
            "401": [
                "401 Unauthenticated",
                "Authorization header required with an app access token.\n"
            ]
        }
    },
    "create-conduits": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Conduit created.\n"
            ],
            "400": [
                "400 Bad Request",
                "Invalid shard count.\n"
            ],
            "401": [
                "401 Unauthenticated",
                "Authorization header required with an app access token.\n"
            ],
            "429": [
                "429 Too Many Requests",
                "Conduit limit reached.\n"
            ]
        }
    },
    "update-conduits": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Conduit updated.\n"
            ],
            "400": [
                "400 Bad Request",
                "- Invalid shard countThe id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthenticated",
                "Authorization header required with an app access token.\n"
            ],
            "404": [
                "404 Not Found",
                "Conduit not found.\nConduit’s owner must match the client ID in the access token.\n"
            ]
        }
    },
    "delete-conduit": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully deleted the conduit.\n"
            ],
            "400": [
                "400 Bad Request",
                "The id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthenticated",
                "Authorization header required with an app access token.\n"
            ],
            "404": [
                "404 Not Found",
                "Conduit not found.\nConduit’s owner must match the client ID in the access token.\n"
            ]
        }
    },
    "get-conduit-shards": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved shards.\n"
            ],
            "400": [
                "400 Bad Request",
                "The id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthenticated",
                "Authorization header required with an app access token.\n"
            ],
            "404": [
                "404 Not Found",
                "Conduit not found.\nConduit’s owner must match the client ID in the access token.\n"
            ]
        }
    },
    "update-conduit-shards": {
        "errors": {
            "OK CODE": "202",
            "202": [
                "202 Accepted",
                "Successfully retrieved shards.\n"
            ],
            "400": [
                "400 Bad Request",
                "The id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthenticated",
                "Authorization header required with an app access token.\n"
            ],
            "404": [
                "404 Not Found",
                "Conduit not found.\nConduit’s owner must match the client ID in the access token.\n"
            ]
        }
    },
    "get-content-classification-labels": {
        "errors": {
            "OK CODE": ""
        }
    },
    "get-drops-entitlements": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the entitlements.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The value in the fulfillment_status query parameter is not valid.\n- The ID in the user_id query parameter must match the user ID in the user access token.\nThe client in the access token is not associated with a known organization.\nThe owner of the client in the access token is not a member of the organization.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The ID in the Client-Id header must match the Client ID in the access token.\nThe Authorization header is required and must specify an app access token or user access token.\nThe access token is not valid.\n"
            ],
            "403": [
                "403 Fobidden",
                "- The organization associated with the client in the access token must own the game specified in the game_id query parameter.\n- The organization associated with the client in the access token must own the entitlements specified in the id query parameter.\n"
            ],
            "500": [
                "500 Internal server error",
                "-  "
            ]
        }
    },
    "update-drops-entitlements": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully requested the updates. Check the response to determine which updates succeeded.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The value in the fulfillment_status field is not valid.\nThe client in the access token is not associated with a known organization.\nThe owner of the client in the access token is not a member of the organization.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify an app access token or user access token.\nThe access token is not valid.\nThe ID in the Client-Id header must match the Client ID in the access token.\n"
            ],
            "500": [
                "500 Internal server error",
                "-  "
            ]
        }
    },
    "get-extension-configuration-segment": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the configurations.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The extension_id query parameter is required.\n- The value in the segment query parameter is not valid.\n- The broadcaster_id query parameter is required if the segment query parameter is set to broadcaster or developer.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify a JWT token.\nThe JWT token is not valid.\nThe Client-Id header is required.\n"
            ],
            "429": [
                "429 Too many requests",
                "The app exceeded the number of requests that it may make per minute. See Rate Limits above.\n"
            ]
        }
    },
    "set-extension-configuration-segment": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully updated the configuration.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id field is required if segment is set to developer or broadcaster.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify a JWT token.\nThe JWT token is not valid.\nThe Client-Id header is required.\n"
            ]
        }
    },
    "set-extension-required-configuration": {
        "errors": {
            "204": [
                "204 Not Found",
                "Successfully updated the extension’s required_configuration string.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The extension_id field is required.\n- The extension_version field is required.\n- The required_configuration field is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify a JWT token.\nThe JWT token is not valid.\nThe Client-Id header is required.\n"
            ]
        }
    },
    "send-extension-pubsub-message": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully sent the message.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id field in the request's body may only be set if the is_global_broadcast field is set to false.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify a JWT token.\nThe JWT token is not valid.\nThe Client-Id header is required.\n"
            ],
            "422": [
                "422 Unprocessable Entity",
                "The message is too large.\n"
            ]
        }
    },
    "get-extension-live-channels": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of broadcasters.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The extension_id query parameter is required.\nThe pagination cursor is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify an app access token or user access token.\nThe access token is not valid.\nThe ID in the Client-Id header must match the client ID in the access token.\n"
            ],
            "404": [
                "404 Not Found",
                "- The extension specified in the extension_id query parameter was not found or it's not being used in a live stream.\n"
            ]
        }
    },
    "get-extension-secrets": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of secrets.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The extension_id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify a JWT token.\nThe JWT token is not valid.\nThe Client-Id header is required.\n"
            ]
        }
    },
    "create-extension-secret": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully created the new secret.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The extension_id query parameter is required.\n- The delay specified in the delay query parameter is too short.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify a JWT token.\nThe JWT token is not valid.\nThe Client-Id header is required.\n"
            ]
        }
    },
    "send-extension-chat-message": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully sent the chat message.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The extension_id field in the request's body is required.\n- The extension_version field in the request's body is required.\n- The text field in the request's body is required.\nThe message is too long.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify a JWT token.\n- The ID in the broadcaster_id query parameter must match the channel_id claim in the JWT.\nThe JWT token is not valid.\nThe Client-Id header is required.\n"
            ]
        }
    },
    "get-extensions": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of extensions.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The extension_id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The request must specify the Authorization header.\nThe Authorization header is required and must specify a JWT token.\nThe JWT token is not valid.\nThe request must specify the Client-Id header.\n"
            ],
            "404": [
                "404 Not Found",
                "- The extension in the extension_id query parameter was not found.\n"
            ]
        }
    },
    "get-released-extensions": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the extension.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The extension_id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header must specify an app access token or user access token.\nThe access token is not valid.\nThe ID in the Client-Id header must match the client ID in the access token.\n"
            ],
            "404": [
                "404 Not Found",
                "- The extension specified in the extension_id query parameter was not found or is not released.\n"
            ]
        }
    },
    "get-extension-bits-products": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of products.\n"
            ],
            "400": [
                "400 Bad Request",
                "The ID in the Client-Id header must belong to an extension.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify an app access token; you may not specify a user access token.\nThe OAuth token is not valid.\nThe ID in the Client-Id header must match the Client ID in the OAuth token.\n"
            ]
        }
    },
    "update-extension-bits-product": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully created the product.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The sku field is required.\n- The value in the sku field is not valid. The SKU may contain only alphanumeric characters, dashes (-), underscores (_), and periods (.).\n- The cost object's amount field is required.\n- The value in the cost object's amount field is not valid.\n- The <cost>cost</cost> object's type field is required.\n- The value in the cost object's type field is not valid.\n- The display_name field is required.\nThe ID in the Client-Id header must belong to the extension.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify an app access token; you may not specify a user access token.\nThe OAuth token is not valid.\nThe ID in the Client-Id header must match the Client ID in the OAuth token.\n"
            ]
        }
    },
    "create-eventsub-subscription": {
        "errors": {
            "OK CODE": "202",
            "202": [
                "202 Accepted",
                "Successfully accepted the subscription request.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The condition field is required.\n- The user specified in the condition object does not exist.\n- The condition object is missing one or more required fields.\n- The combination of values in the version and type fields is not valid.\n- The length of the string in the secret field is not valid.\n- The URL in the transport's callback field is not valid. The URL must use the HTTPS protocol and the 443 port number.\n- The value specified in the method field is not valid.\n- The callback field is required if you specify the webhook transport method.\n- The session_id field is required if you specify the WebSocket transport method.\nThe combination of subscription type and version is not valid.\n- The conduit_id field is required if you specify the Conduit transport method.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify an app access token if the transport method is webhook.\nThe Authorization header is required and must specify a user access token if the transport method is WebSocket.\nThe access token is not valid.\nThe ID in the Client-Id header must match the client ID in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "The access token is missing the required scopes.\n"
            ],
            "409": [
                "409 Conflict",
                "- A subscription already exists for the specified event type and condition combination.\n"
            ],
            "429": [
                "429 Too Many Requests",
                "- The request exceeds the number of subscriptions that you may create with the same combination of type and condition values.\n"
            ]
        }
    },
    "delete-eventsub-subscription": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully deleted the subscription.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify an app access token.\nThe access token is not valid.\nThe ID in the Client-Id header must match the client ID in the access token.\n"
            ],
            "404": [
                "404 Not Found",
                "The subscription was not found.\n"
            ]
        }
    },
    "get-eventsub-subscriptions": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the subscriptions.\n"
            ],
            "400": [
                "400 Bad Request",
                "The request may specify only one filter query parameter. For example, either \n- type or status or user_id.\n- The value in the type query parameter is not valid.\n- The value in the status query parameter is not valid.\n- The cursor specified in the after query parameter is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify an app access token.\nThe access token is not valid.\nThe ID in the Client-Id header must match the client ID in the access token.\n"
            ]
        }
    },
    "get-top-games": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of broadcasts.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The value in the first query parameter is not valid.\n- The cursor in the after or before query parameter is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify an app access token or user access token.\nThe access token is not valid.\nThe ID in the Client-Id header must match the client ID in the access token.\n"
            ]
        }
    },
    "get-games": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the specified games.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The request must specify the id or name or igdb_id query parameter.\n- The combined number of game IDs (id and igdb_id) and game names that you specify in the request must not exceed 100.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify an app access token or user access token.\nThe access token is not valid.\nThe ID in the Client-Id header must match the client ID in the access token.\n"
            ]
        }
    },
    "get-creator-goals": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the broadcaster’s goals.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain a user access token.\n- The user access token must include the channel:read:goals scope.\n- The ID in broadcaster_id must match the user ID in the user access token.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ]
        }
    },
    "get-channel-guest-star-settings": {
        "errors": {
            "400": [
                "400 Bad Request",
                "- Missing broadcaster_id Missing moderator_id"
            ],
            "403": [
                "403 Forbidden",
                "- Insufficient authorization for viewing channel’s Guest Star settings"
            ]
        }
    },
    "update-channel-guest-star-settings": {
        "errors": {
            "204": [
                "204 No Content",
                "- Successfully updated channel settings"
            ],
            "400": [
                "400 Bad Request",
                "- Missing broadcaster_id Invalid slot_count  Invalid group_layout"
            ]
        }
    },
    "get-guest-star-session": {
        "errors": {
            "400": [
                "400 Bad Request",
                "- Missing broadcaster_id Missing moderator_id"
            ],
            "401": [
                "401 Unauthenticated",
                "- moderator_id and user token do not match"
            ]
        }
    },
    "create-guest-star-session": {
        "errors": {
            "400": [
                "400 Bad Request",
                "- Missing broadcaster_id Session limit reached (1 active call)"
            ],
            "401": [
                "401 Unauthorized",
                "- Phone verification missing"
            ],
            "403": [
                "403 Forbidden",
                "- Insufficient authorization for creating session"
            ]
        }
    },
    "end-guest-star-session": {
        "errors": {
            "400": [
                "400 Bad Request",
                "- Missing or invalid broadcaster_id Missing or invalid session_id Session has already been ended"
            ],
            "403": [
                "403 Forbidden",
                "- Insufficient authorization for ending session"
            ]
        }
    },
    "get-guest-star-invites": {
        "errors": {
            "400": [
                "400 Bad Request",
                "- Missing broadcaster_id Missing session_id"
            ]
        }
    },
    "send-guest-star-invite": {
        "errors": {
            "400": [
                "400 Bad Request",
                "- Missing broadcaster_id Missing moderator_id Missing session_id Missing guest_id Invalid session_id"
            ],
            "403": [
                "403 Forbidden",
                "- Unauthorized guest invited Guest already invited"
            ]
        }
    },
    "delete-guest-star-invite": {
        "errors": {
            "400": [
                "400 Bad Request",
                "- Missing broadcaster_id Missing session_id Missing guest_id Invalid session_id"
            ],
            "404": [
                "404 Not Found",
                "- No invite exists for specified guest_id"
            ]
        }
    },
    "assign-guest-star-slot": {
        "errors": {
            "204": [
                "204 No Content",
                "- Successfuly assigned guest to slot"
            ],
            "400": [
                "400 Bad Request",
                "- Missing broadcaster_id Missing moderator_id Missing guest_id Missing or invalid session_id Missing or invalid slot_id"
            ],
            "401": [
                "401 Unauthorized",
                "- moderator_id is not a guest star moderator"
            ],
            "403": [
                "403 Forbidden",
                "- Cannot assign host slot Guest not invited to session Guest already assigned to slot Guest is not ready to join"
            ]
        }
    },
    "update-guest-star-slot": {
        "errors": {
            "204": [
                "204 No Content",
                "- Successfuly updated slot(s)"
            ],
            "400": [
                "400 Bad Request",
                "- Missing broadcaster_id Missing or invalid session_id Missing or invalid slot_id"
            ]
        }
    },
    "delete-guest-star-slot": {
        "errors": {
            "204": [
                "204 No Content",
                "- Successfuly removed user from slot"
            ],
            "400": [
                "400 Bad Request",
                "- Missing broadcaster_id Missing moderator_id Missing or invalid session_id Missing or invalid slot_id"
            ],
            "403": [
                "403 Forbidden",
                "- moderator_id is not a Guest Star moderator The request is attempting to modify a restricted slot"
            ],
            "404": [
                "404 Not Found",
                "- guest_id or slot_id not found"
            ]
        }
    },
    "update-guest-star-slot-settings": {
        "errors": {
            "204": [
                "204 No Content",
                "- Successfuly updated slot settings"
            ],
            "400": [
                "400 Bad Request",
                "- Missing broadcaster_id Missing moderator_id Missing or invalid session_id Missing or invalid slot_id"
            ],
            "403": [
                "403 Forbidden",
                "- moderator_id is not a Guest Star moderator The request is attempting to modify a restricted slot"
            ]
        }
    },
    "get-hype-train-events": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the broadcaster’s Hype Train events.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in broadcaster_id must match the user_id in the user access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the channel:read:hype_train scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ]
        }
    },
    "check-automod-status": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully checked the messages.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The data field is required and the list must contain one or more messages to check.\n- The msg_id field is required.\n- The msg_text field is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain a user access token.\n- The user access token must include the moderation:read scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "- The ID in broadcaster_id must match the user ID in the user access token.\n"
            ],
            "429": [
                "429 Too Many Requests",
                "The broadcaster exceeded the number of chat message checks that they may make. See the endpoint's rate limits.\n"
            ]
        }
    },
    "manage-held-automod-messages": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully approved or denied the message.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The value in the action field is not valid.\n- The user_id field is required.\n- The msg_id field is required.\n- The action field is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in user_id must match the user ID in the user access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the moderator:manage:automod scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "- The user in user_id is not one of the broadcaster's moderators.\n"
            ],
            "404": [
                "404 Not Found",
                "- The message specified in the msg_id field was not found.\n"
            ]
        }
    },
    "get-automod-settings": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the broadcaster’s AutoMod settings.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The moderator_id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in moderator_id must match the user ID in the user access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the moderator:read:automod_settings scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "- The user in moderator_id is not one of the broadcaster's moderators.\n"
            ]
        }
    },
    "update-automod-settings": {
        "errors": {
            "200": [
                "200 Ok",
                "Successfully updated the broadcaster’s AutoMod settings.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id is required.\n- The moderator_id is required.\n- The overall_level setting or one or more individual settings like aggression is required; the overall and individual settings are mutually exclusive, so don't set both.\nThe value of one or more AutoMod settings is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in moderator_id must match the user ID in the user access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the moderator:manage:automod_settings scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "- The user in moderator_id is not one of the broadcaster's moderators.\n"
            ]
        }
    },
    "get-banned-users": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of banned users.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in broadcaster_id must match the user ID in the user access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the moderation:read scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ]
        }
    },
    "ban-user": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully banned the user or placed them in a timeout.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The moderator_id query parameter is required.\n- The user_id field is required.\n- The text in the reason field is too long.\n- The value in the duration field is not valid.\n- The user specified in the user_id field may not be banned.\n- The user specified in the user_id field may not be put in a timeout.\n- The user specified in the user_id field is already banned.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in moderator_id must match the user ID in the access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the moderator:manage:banned_users scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "- The user in moderator_id is not one of the broadcaster's moderators.\n"
            ],
            "409": [
                "409 Conflict",
                "You may not update the user's ban state while someone else is updating the state. For example, someone else is currently banning the user or putting them in a timeout, moving the user from a timeout to a ban, or removing the user from a ban or timeout. Please retry your request.\n"
            ],
            "429": [
                "429 Too Many Requests",
                "The app has exceeded the number of requests it may make per minute for this broadcaster.\n"
            ]
        }
    },
    "unban-user": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully removed the ban or timeout.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The moderator_id query parameter is required.\n- The user_id query parameter is required.\n- The user specified in the user_id query parameter is not banned.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in moderator_id must match the user ID in the access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the moderator:manage:banned_users scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "- The user in moderator_id is not one of the broadcaster's moderators.\n"
            ],
            "409": [
                "409 Conflict",
                "You may not update the user's ban state while someone else is updating the state. For example, someone else is currently removing the ban or timeout, or they're moving the user from a timeout to a ban. Please retry your request.\n"
            ],
            "429": [
                "429 Too Many Requests",
                "The app has exceeded the number of requests it may make per minute for this broadcaster.\n"
            ]
        }
    },
    "get-unban-requests": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of unban requests.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The ID in the broadcaster_id query parameter is not valid.\n- The moderator_id query parameter is required.\n- The ID in the moderator_id query parameter is not valid.\nThe pagination cursor is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in moderator_id must match the user ID in the user access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the moderator:read:unban_requests or moderator:manage:unban_requests scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ]
        }
    },
    "resolve-unban-requests": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully resolved the unban request.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The ID in the broadcaster_id query parameter is not valid.\n- The moderator_id query parameter is required.\n- The ID in the moderator_id query parameter is not valid.\nThe pagination cursor is not valid.\n- The broadcaster is not receiving unban requestsInvalid requested update"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in moderator_id must match the user ID in the user access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the moderator:manage:unban_requests scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "404": [
                "404 Not Found",
                "The unban request ID was not found.\n"
            ]
        }
    },
    "get-blocked-terms": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of blocked terms.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The moderator_id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in moderator_id must match the user ID in the user access token.\nThe Authorization header must contain a user access token.\n- The user access token must include the moderator:read:blocked_terms scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "- The user in moderator_id is not one of the broadcaster's moderators.\n"
            ]
        }
    },
    "add-blocked-term": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of blocked terms.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The moderator_id query parameter is required.\n- The text field is required.\n- The length of the term in the text field is either too short or too long.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in moderator_id must match the user ID in the user access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the moderator:manage:blocked_terms scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "- The user in moderator_id is not one of the broadcaster's moderators.\n"
            ]
        }
    },
    "remove-blocked-term": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully removed the blocked term. Also returned if the ID is not found.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The moderator_id query parameter is required.\n- The id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in moderator_id must match the user ID in the user access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the moderator:manage:blocked_terms scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "- The user in moderator_id is not one of the broadcaster's moderators.\n"
            ]
        }
    },
    "delete-chat-messages": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully removed the specified messages.\n"
            ],
            "400": [
                "400 Bad Request",
                "You may not delete another moderator's messages.\nYou may not delete the broadcaster's messages.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain a user access token.\n- The user access token is missing the moderator:manage:chat_messages scope.\nThe OAuth token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the OAuth token.\n"
            ],
            "403": [
                "403 Forbidden",
                "- The user in moderator_id is not one of the broadcaster's moderators.\n"
            ],
            "404": [
                "404 Not Found",
                "- The ID in message_id was not found.\nThe specified message was created more than 6 hours ago.\n"
            ]
        }
    },
    "get-moderated-channels": {
        "errors": {
            "OK CODE": ""
        }
    },
    "get-moderators": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of moderators.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in broadcaster_id must match the user ID found in the access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the moderation:read scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ]
        }
    },
    "add-channel-moderator": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully added the moderator.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The ID in broadcaster_id was not found.\n- The ID in user_id was not found.\n- The user in user_id is already a moderator in the broadcaster's chat room.\n- The user in user_id cannot become a moderator because they're banned from the channel.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain a user access token.\n- The user access token must include the channel:manage:moderators scope.\nThe access token is not valid.\n- The ID in the broadcaster_id query parameter must match the user ID in the access token.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "422": [
                "422 Unprocessable Entity",
                "- The user in user_id is a VIP. To make them a moderator, you must first remove them as a VIP (see \n- Remove Channel VIP).\n"
            ],
            "429": [
                "429 Too Many Requests",
                "The broadcaster has exceeded the number of requests allowed within a 10-second window. See this endpoint's rate limits.\n"
            ]
        }
    },
    "remove-channel-moderator": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully removed the moderator.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The ID in broadcaster_id was not found.\n- The ID in user_id was not found.\n- The user in user_id is not a moderator in the broadcaster's chat room.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain a user access token.\n- The user access token must include the channel:manage:moderators scope.\nThe access token is not valid.\n- The ID in the broadcaster_id query parameter must match the user ID in the access token.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "429": [
                "429 Too Many Requests",
                "The broadcaster has exceeded the number of requests allowed within a 10-second window. See this endpoint's rate limits.\n"
            ]
        }
    },
    "get-vips": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the broadcaster’s list of VIPs.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The ID in the user_id query parameter is not valid.\n- The number of user_id query parameters exceeds the maximum allowed.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain a user access token.\n- The user access token must include the channel:read:vips  or channel:manage:vips scope.\nThe OAuth token is not valid.\n- The ID in the broadcaster_id query parameter must match the user ID in the access token.\nThe client ID specified in the Client-Id header does not match the client ID specified in the OAuth token.\n"
            ]
        }
    },
    "add-channel-vip": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully added the VIP.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The user in the user_id query parameter is blocked from the broadcaster's channel.\n- The ID in the broadcaster_id query parameter is not valid.\n- The ID in the user_id query parameter is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain a user access token.\n- The user access token must include the channel:manage:vips scope.\nThe OAuth token is not valid.\n- The ID in the broadcaster_id query parameter must match the user ID in the access token.\nThe client ID specified in the Client-Id header does not match the client ID specified in the OAuth token.\n"
            ],
            "403": [
                "403 Forbidden",
                "- The ID in the broadcaster_id query parameter must match the user ID in the access token.\n"
            ],
            "404": [
                "404 Not Found",
                "- The ID in broadcaster_id was not found.\n- The ID in user_id was not found.\n"
            ],
            "409": [
                "409 Conflict",
                "The broadcaster doesn’t have available VIP slots. \n- Read More"
            ],
            "422": [
                "422 Unprocessable Entity",
                "- The user in user_id is a moderator. To make them a VIP, you must first remove them as a moderator (see \n- Remove Channel Moderator).\n- The user in the user_id query parameter is already a VIP.\n"
            ],
            "425": [
                "425 Too Early",
                "The broadcaster must complete the Build a Community requirement before they may assign VIPs.\n"
            ],
            "429": [
                "429 Too Many Requests",
                "The broadcaster exceeded the number of VIP that they may add within a 10-second window. See Rate Limits for this endpoint above.\n"
            ]
        }
    },
    "remove-channel-vip": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully removed the VIP status from the user.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The ID in broadcaster_id is not valid.\n- The ID in user_id is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain a user access token.\n- The user access token must include the channel:manage:vips scope.\nThe OAuth token is not valid.\n- The ID in the broadcaster_id query parameter must match the user ID in the access token.\nThe client ID specified in the Client-Id header does not match the client ID specified in the OAuth token.\n"
            ],
            "403": [
                "403 Forbidden",
                "- The user in broadcaster_id doesn't have permission to remove the user's VIP status.\n"
            ],
            "404": [
                "404 Not Found",
                "- The ID in broadcaster_id was not found.\n- The ID in user_id was not found.\n"
            ],
            "422": [
                "422 Unprocessable Entity",
                "- The user in user_id is not a VIP in the broadcaster's channel.\n"
            ],
            "429": [
                "429 Too Many Requests",
                "The broadcaster exceeded the number of VIPs that they may remove within a 10-second window. See Rate Limits for this endpoint above.\n"
            ]
        }
    },
    "update-shield-mode-status": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully updated the broadcaster’s Shield Mode status.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The ID in the broadcaster_id query parameter is not valid.\n- The is_active field is required.\n- The value in the is_active field is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in moderator_id must match the user ID in the user access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the moderator:manage:shield_mode scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "- The user in moderator_id is not one of the broadcaster's moderators.\n"
            ]
        }
    },
    "get-shield-mode-status": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the broadcaster’s Shield Mode activation status.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The ID in the broadcaster_id query parameter is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in moderator_id must match the user ID in the user access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the moderator:read:shield_mode or moderator:manage:shield_mode scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "- The user in moderator_id is not one of the broadcaster's moderators.\n"
            ]
        }
    },
    "warn-chat-user": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully warn a user.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The moderator_id query parameter is required.\n- The user_id query parameter is required.\n- The reason query parameter is required.\n- The text in the reason field is too long.\n- The user specified in the user_id may not be warned.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in moderator_id must match the user ID in the user access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the moderator:manage:warnings scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "- The user in moderator_id is not one of the broadcaster’s moderators.\n"
            ],
            "409": [
                "409 Conflict",
                "You may not update the user’s warning state while someone else is updating the state. For example, someone else is currently warning the user or the user is acknowledging an existing warning. Please retry your request.\n"
            ],
            "429": [
                "429 Too Many Requests",
                "The app has exceeded the number of requests it may make per minute for this broadcaster.\n"
            ],
            "500": [
                "500 Internal Server Error",
                "Internal Server Error.\n"
            ]
        }
    },
    "get-polls": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the broadcaster's polls.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in broadcaster_id must match the user ID in the access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token is missing the channel:read:polls scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header must match the client ID specified in the access token.\n"
            ],
            "404": [
                "404 Not Found",
                "- None of the IDs in the id query parameters were found.\n"
            ]
        }
    },
    "create-poll": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully created the poll.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id field is required.\n- The title field is required.\n- The choices field is required.\n- The duration field is required.\n- The value in duration is outside the allowed range of values.\n- The value in channel_points_per_vote is outside the allowed range of values.\n- The value in bits_per_vote is outside the allowed range of values.\n- The poll's title is too long.\n- The choice's title is too long.\n- The choice's title failed AutoMod checks.\nThe number of choices in the poll may not be less than 2 or greater that 5.\nThe broadcaster already has a poll that's running; you may not create another poll until the current poll completes.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in broadcaster_id must match the user ID in the access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token is missing the channel:manage:polls scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ]
        }
    },
    "end-poll": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully ended the poll.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id field is required.\n- The id field is required.\n- The status field is required.\n- The value in the status field is not valid.\nThe poll must be active to terminate or archive it.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in broadcaster_id must match the user ID in the user access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the channel:manage:polls scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header must match the client ID specified in the access token.\n"
            ]
        }
    },
    "get-predictions": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of predictions.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in broadcaster_id must match the user ID in the access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the channel:read:predictions scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ]
        }
    },
    "create-prediction": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully created the Channel Points Prediction.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id field is required.\n- The title field is required.\n- The outcomes field is required.\n- The prediction_window field is required.\n- The value in prediction_window is outside the allowed range of values.\n- The prediction's title is too long.\n- The outcome's title is too long.\n- The outcome's title failed AutoMod checks.\nThere must be 2 outcomes in the prediction.\nThe broadcaster already has a prediction that's running; you may not create another prediction until the current prediction is resolved or canceled.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in broadcaster_id must match the user ID in the access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the channel:manage:predictions scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "429": [
                "429 Too Many Requests",
                "-  "
            ]
        }
    },
    "end-prediction": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully ended the prediction.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id field is required.\n- The id field is required.\n- The status field is required.\n- The winning_outcome_id field is required if status is RESOLVED.\n- The value in the status field is not valid.\nTo update the prediction's status to RESOLVED or CANCELED, its current status must be ACTIVE or LOCKED.\nTo update the prediction's status to LOCKED, its current status must be ACTIVE.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in broadcaster_id must match the user ID in the OAuth token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the channel:manage:predictions scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "404": [
                "404 Not Found",
                "- The prediction in the id field was not found.\n- The outcome in the winning_outcome_id field was not found.\n"
            ]
        }
    },
    "start-a-raid": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully requested to start a raid. To determine whether the raid successfully occurred (that is, the broadcaster clicked \n- Raid Now or the countdown expired), you must subscribe to the Channel Raid event.\n"
            ],
            "400": [
                "400 Bad Request",
                "The raiding broadcaster is blocked from the targeted channel.\nThe targeted channel doesn't accept raids from this broadcaster.\nThere are too many viewers in the raiding party.\n- The IDs in from_broadcaster_id and to_broadcaster_id cannot be the same ID.\n- The ID in the from_broadcaster_id query parameter is not valid.\n- The ID in the to_broadcaster_id query parameter is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in from_broadcaster_id must match the user ID found in the request’s OAuth token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the channel:manage:raids scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "404": [
                "404 Not Found",
                "The targeted channel was not found.\n"
            ],
            "409": [
                "409 Conflict",
                "The broadcaster is already in the process of raiding another channel.\n"
            ],
            "429": [
                "429 Too Many Requests",
                "The broadcaster exceeded the number of raid requests that they may make. The limit is 10 requests within a 10-minute window.\n"
            ]
        }
    },
    "cancel-a-raid": {
        "errors": {
            "204": [
                "204 No Content",
                "The pending raid was successfully canceled.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The ID in the broadcaster_id query parameter is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in broadcaster_id must match the user ID found in the request’s OAuth token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the channel:manage:raids scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "404": [
                "404 Not Found",
                "The broadcaster doesn't have a pending raid to cancel.\n"
            ],
            "429": [
                "429 Too Many Requests",
                "The broadcaster exceeded the number of raid requests that they may make. The limit is 10 requests within a 10-minute window.\n"
            ]
        }
    },
    "get-channel-stream-schedule": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the broadcaster’s streaming schedule.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The ID in the broadcaster_id query parameter is not valid.\n- The ID in the id query parameter is not valid.\n- The format of the date and time in the start_time query parameter is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify a valid app access token or user access token.\nThe access token is not valid.\nThe ID in the Client-Id header must match the Client ID in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "Only partners and affiliates may add non-recurring broadcast segments.\n"
            ],
            "404": [
                "404 Not Found",
                "The broadcaster has not created a streaming schedule.\n"
            ]
        }
    },
    "get-channel-icalendar": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the broadcaster’s schedule as an iCalendar.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The ID in the broadcaster_id query parameter is not valid.\n"
            ]
        }
    },
    "update-channel-stream-schedule": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully updated the broadcaster’s schedule settings.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The ID in the broadcaster_id query parameter is not valid.\n- The format of the string in vacation_start_time is not valid.\n- The format of the string in vacation_end_time is not valid.\n- The date in vacation_end_time must be later than the date in vacation_start_time.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in the broadcaster_id query parameter must match the user ID in the user access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the channel:manage:schedule scope.\nThe access token is not valid.\nThe ID in the Client-Id header must match the client ID in the access token.\n"
            ],
            "404": [
                "404 Not Found",
                "The broadcaster's schedule was not found.\n"
            ]
        }
    },
    "create-channel-stream-schedule-segment": {
        "errors": {
            "200": [
                "200 Ok",
                "Successfully added the broadcast segment.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The ID in the broadcaster_id query parameter is not valid.\n- The format of the date and time in the start_time field is not valid.\n- The value in the timezone field is not valid.\n- The value in the duration field is not valid.\n- The ID in the category_id field is not valid.\n- The string in the title field is too long.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in the broadcaster_id query parameter must match the user ID in the user access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the channel:manage:schedule scope.\nThe access token is not valid.\nThe ID in the Client-Id header must match the client ID in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "Only partners and affiliates may add non-recurring broadcast segments.\n"
            ]
        }
    },
    "update-channel-stream-schedule-segment": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully updated the broadcast segment.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The ID in the broadcaster_id query parameter is not valid.\n- The id query parameter is required.\n- The ID in the id query parameter is not valid.\n- The format of the date and time in the start_time field is not valid.\n- The value in the timezone field is not valid.\n- The value in the duration field is not valid.\n- The ID in the category_id field is not valid.\n- The string in the title field is too long.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in the broadcaster_id query parameter must match the user ID in the user access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the channel:manage:schedule scope.\nThe access token is not valid.\nThe ID in the Client-Id header must match the client ID in the access token.\n"
            ],
            "404": [
                "404 Not Found",
                "The specified broadcast segment was not found.\n"
            ]
        }
    },
    "delete-channel-stream-schedule-segment": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully removed the broadcast segment.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The ID in the broadcaster_id query parameter is not valid.\n- The id query parameter is required.\n- The ID in the id query parameter is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in the broadcaster_id query parameter must match the user ID in the user access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the channel:manage:schedule scope.\nThe access token is not valid.\nThe ID in the Client-Id header must match the client ID in the OAuth token.\n"
            ]
        }
    },
    "search-categories": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of category names that matched the specified query string.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The query query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain an app access token or user access token.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ]
        }
    },
    "search-channels": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of category names that matched the specified query string.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The query query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain an app access token or user access token.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ]
        }
    },
    "get-stream-key": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the stream’s key.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id field is required.\n- The ID in the broadcaster_id field is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in broadcaster_id must match the user ID in the access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the channel:read:stream_key scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header must match the client ID specified in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "The user must complete additional steps in order to stream. Present the user with the returned error message.\n"
            ]
        }
    },
    "get-streams": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of streams.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The value in the type query parameter is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify an app access token or user access token.\nThe access token is not valid.\nThe ID in the Client-Id header must match the Client ID in the access token.\n"
            ]
        }
    },
    "get-followed-streams": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of broadcasters that the user follows and that are streaming live.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The user_id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in user_id must match the user ID found in the access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the user:read:follows scope.\nThe OAuth token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ]
        }
    },
    "create-stream-marker": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully created the marker.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The user_id field is required.\n- The length of the string in the description field is too long.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain a user access token.\n- The user access token must include the user:manage:broadcast scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "- The user in the access token is not authorized to create video markers for the user in the user_id field. The user in the access token must own the video or they must be one of the broadcaster's editors.\n"
            ],
            "404": [
                "404 Not Found",
                "- The user in the user_id field is not streaming live.\nThe ID in the user_id field is not valid.\nThe user hasn't enabled video on demand (VOD).\n"
            ]
        }
    },
    "get-stream-markers": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of markers.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The request must specify either the user_id or video_id query parameter, but not both.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain a user access token.\n- The user access token must include the user:read:broadcast or user:manage:broadcast scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "The user in the access token is not authorized to get the video's markers. The user in the access token must own the video or be one of the broadcaster's editors.\n"
            ],
            "404": [
                "404 Not Found",
                "- The user specified in the user_id query parameter doesn't have videos.\n"
            ]
        }
    },
    "get-broadcaster-subscriptions": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the broadcaster’s list of subscribers.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in broadcaster_id must match the user ID found in the request’s OAuth token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the channel:read:subscriptions scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ]
        }
    },
    "check-user-subscription": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "The user subscribes to the broadcaster.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n- The user_id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in user_id must match the user ID found in the request’s OAuth token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the user:read:subscriptions scope.\nThe access token is not valid.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "404": [
                "404 Not Found",
                "- The user in user_id does not subscribe to the broadcaster in broadcaster_id.\n"
            ]
        }
    },
    "get-all-stream-tags": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of tags.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The tag_id query parameter is empty (for example, &tag_id=).\nThe list of tag IDs is too long.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify an app access token or user access token.\nThe access token is not valid.\nThe ID in the Client-Id header must match the Client ID in the access token.\n"
            ]
        }
    },
    "get-stream-tags": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of tags.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id field is required.\n- The ID in the broadcaster_id field is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must specify an app access token or user access token.\nThe access token is not valid.\nThe ID in the Client-Id header must match the Client ID in the access token.\n"
            ]
        }
    },
    "get-channel-teams": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of teams.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is missing or invalid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header must contain an app access token or user access token.\nThe access token is not valid.\nThe ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "404": [
                "404 Not Found",
                "The broadcaster was not found.\n"
            ]
        }
    },
    "get-teams": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the team's information.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The name or id query parameter is required.\n- Specify either the name or id query parameter but not both.\n- The ID in the id query parameter is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header must contain an app access token or user access token.\nThe access token is not valid.\nThe ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "404": [
                "404 Not Found",
                "The specified team was not found.\n"
            ]
        }
    },
    "get-users": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the specified users’ information.\n"
            ],
            "400": [
                "400 Bad Request",
                "The *id* or *login* query parameter is required unless the request uses a user access token.\nThe request exceeded the maximum allowed number of *id* and/or *login* query parameters.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain an app access token or user access token.\nThe access token is not valid.\nThe ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ]
        }
    },
    "update-user": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully updated the specified user's information.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The string in the description query parameter is too long.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain a user access token.\n- The user access token must include the user:edit scope.\nThe access token is not valid.\nThe ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "429": [
                "429 Too Many Requests",
                "The app exceeded the number of requests that it may make. \n"
            ]
        }
    },
    "get-user-block-list": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the broadcaster's list of blocked users.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The broadcaster_id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The ID in broadcaster_id must match the user ID found in the request’s access token.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the user:read:blocked_users scope.\nThe access token is not valid.\nThe ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ]
        }
    },
    "block-user": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully blocked the user.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The target_user_id query parameter is required.\n- The ID in target_user_id cannot be the same as the user ID in the access token.\n- The value in source_context is not valid.\n- The value in reason is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain a user access token.\n- The user access token must include the user:manage:blocked_users scope.\nThe access token is not valid.\nThe ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ]
        }
    },
    "unblock-user": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully removed the block.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The target_user_id query parameter is required.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain a user access token.\n- The user access token must include the user:read:blocked_users scope.\nThe access token is not valid.\nThe ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ]
        }
    },
    "get-user-extensions": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the user's installed extensions.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain a user access token.\n- The user access token must include the user:read:broadcast scope.\nThe access token is not valid.\nThe ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ]
        }
    },
    "get-user-active-extensions": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the user's active extensions.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The user_id query parameter is required if you specify an app access token.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain an app access token or user access token.\nThe access token is not valid.\nThe ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ]
        }
    },
    "update-user-extensions": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully updated the active extensions.\n"
            ],
            "400": [
                "400 Bad Request",
                "The JSON payload is malformed.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain a user access token.\n- The user access token must include the user:edit:broadcast scope.\nThe access token is not valid.\nThe ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "404": [
                "404 Not Found",
                "- An extension with the specified id and version values was not found.\n"
            ]
        }
    },
    "get-videos": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully retrieved the list of videos.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The request must specify either the id or user_id or game_id query parameter.\n- The id, user_id, and game_id query parameters are mutually exclusive; you must specify only one of them.\n- The value in the id query parameter is not valid.\n- The ID in the game_id query parameter is not valid.\n- The value in the type query parameter is not valid.\n- The value in the period query parameter is not valid.\n- The value in the sort query parameter is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The Authorization header is required and must contain an app access token or user access token.\nThe access token is not valid.\nThe ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "404": [
                "404 Not Found",
                "- The ID in the game_id query parameter was not found.\n- The ID in the id query parameter was not found. Returned only if all the IDs were not found; otherwise, the ID is ignored.\n"
            ]
        }
    },
    "delete-videos": {
        "errors": {
            "OK CODE": "200",
            "200": [
                "200 OK",
                "Successfully deleted the list of videos.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The id query parameter is required.\n- The request exceeded the number of allowed id query parameters.\n"
            ],
            "401": [
                "401 Unauthorized",
                "The caller is not authorized to delete the specified video.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the channel:manage:videos scope.\nThe access token is not valid.\nThe ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ]
        }
    },
    "send-whisper": {
        "errors": {
            "204": [
                "204 No Content",
                "Successfully sent the whisper message or the message was silently dropped.\n"
            ],
            "400": [
                "400 Bad Request",
                "- The ID in the from_user_id and to_user_id query parameters must be different.\n- The message field must not contain an empty string.\n- The user that you're sending the whisper to doesn't allow whisper messages (see the Block Whispers from Strangers setting in your Security and Privacy settings).\nWhisper messages may not be sent to suspended users.\n- The ID in the from_user_id query parameter is not valid.\n- The ID in the to_user_id query parameter is not valid.\n"
            ],
            "401": [
                "401 Unauthorized",
                "- The user in the from_user_id query parameter must have a verified phone number.\nThe Authorization header is required and must contain a user access token.\n- The user access token must include the user:manage:whispers scope.\nThe access token is not valid.\n- This ID in from_user_id must match the user ID in the user access token.\nThe client ID specified in the Client-Id header does not match the client ID specified in the access token.\n"
            ],
            "403": [
                "403 Forbidden",
                "Suspended users may not send whisper messages.\nThe account that's sending the message doesn't allow sending whispers.\n"
            ],
            "404": [
                "404 Not Found",
                "- The ID in to_user_id was not found.\n"
            ],
            "429": [
                "429 Too Many Requests",
                "The sending user exceeded the number of whisper requests that they may make. See Rate Limits for this endpoint above.\n"
            ]
        }
    }
}